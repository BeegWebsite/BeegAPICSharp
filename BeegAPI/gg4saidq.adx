using System;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text.RegularExpressions;

namespace BeegAPI
{
    public class BeegVideo
    {
        private string ID;
        private string source;

        public enum BeegQuality
        {
            Best,
            Good,
            Fast
        }

        public BeegVideo(String ID)
        {
            this.ID = ID;
            WebClient client = new WebClient();
            client.Proxy = null;
            source = client.DownloadString("http://beeg.com/" + ID);
            client.Dispose();
        }

        public String getTitle()
        {
            string title = Regex.Match(source, @"<title>(.*)</title>", RegexOptions.IgnoreCase).Groups[1].Value;
            return title.Substring(0, title.Length - 8);
        }

        public String getDescription()
        {
            string description = Regex.Match(source, @"<td class=""synopsis more"" colspan=""2"">(.*)</td>", RegexOptions.IgnoreCase).Groups[1].Value;
            return description;
        }

        public Bitmap getThumbnail()
        {
            WebRequest request = WebRequest.Create("http://img.beeg.com/236x177/" + ID + ".jpg");
            WebResponse response = request.GetResponse();
            Stream responseStream = response.GetResponseStream();
            Bitmap bitmap = new Bitmap(responseStream);
            return bitmap;
        }

        public Bitmap getThumbnail(int width, int height)
        {
            WebRequest request = WebRequest.Create("http://img.beeg.com/" + width + "x" + height + "/" + ID + ".jpg");
            WebResponse response = request.GetResponse();
            Stream responseStream = response.GetResponseStream();
            Bitmap bitmap = new Bitmap(responseStream);
            return bitmap;
        }

        public String getThumbnailURL()
        {
            return "http://img.beeg.com/236x177/" + ID + ".jpg";
        }

        public String getThumbnailURL(int width, int height)
        {
            return "http://img.beeg.com/" + width + "x" + height + "/" + ID + ".jpg";
        }

        public BeegQuality getBestQuality()
        {
            Match match = new Regex("'720p': '(.*)'").Match(source);
            if (match.Success)
                return BeegQuality.Best;
            match = new Regex("'480p': '(.*)'").Match(source);
            if (match.Success)
                return BeegQuality.Good;
            return BeegQuality.Fast;
        }

        public int getBestQualityInPixels()
        {
            BeegQuality bq = getBestQuality();
            return ((bq == BeegQuality.Best) ? 720 : ((bq == BeegQuality.Good) ? 480 : 240));
        }

        public String getURL(BeegQuality quality)
        {
            string url = "";
            if (quality == BeegQuality.Best)
            {
                Match matcher = new Regex("'720p': '(.*)'").Match(source);
                if (matcher.Success)
                    url = matcher.Groups[1].Value;
            }
            if (quality == BeegQuality.Good || (url == "" && quality == BeegQuality.Best))
            {
                Match matcher = new Regex("'480p': '(.*)'").Match(source);
                if (matcher.Success)
                    url = matcher.Groups[1].Value;
            }
            if (quality == BeegQuality.Fast || url == "")
            {
                Match matcher = new Regex("'240p': '(.*)'").Match(source);
                url = matcher.Groups[1].Value;
            }
            return url;
        }

        public String getCasting()
        {
            string cast = Regex.Match(source, @"<th>Cast</th>\s*<td>(.*)</td>", RegexOptions.IgnoreCase).Groups[1].Value;
            return cast;
        }

        public String getPublishedDate()
        {
            string date = Regex.Match(source, @"<th>Published</th>\s*<td>(.*)</td>", RegexOptions.IgnoreCase).Groups[1].Value;
            return date;
        }

        private void downloadFromLink(String urlStr, String file)
        {

        }

    }
}
